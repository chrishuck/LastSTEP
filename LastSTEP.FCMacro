###############################################################################
## FreeCAD Macro Name: LastSTEP
##
## Description:
##
## This is a macro to batch export STEP files of bodies from any FreeCAD file.
## Individual STEP files are created, in a user-selected folder, for each body 
## with the filename matching the Label property of the body.
## (i.e. If the body is named "MyBody", the exported STEP file will be "MyBody.step")
##
## IMPORTANT: Body names CANNOT contain a '/' because it is interpreted as part of the file path.
## Consider a different character in your body names (This is the 'Label' property of the object) 
## 
## If no bodies are selected when the macro is run, an error dialog will appear.
###############################################################################

## METADATA
__Name__ = 'LastSTEP'
__Comment__ = 'Batch exports selected bodies to individual STEP files'
__Author__ = 'Chris Huck'
__Date__ = '2025.03.08'
__Version__ = __Date__
__License__ = 'GPL-3.0-or-later'
__Web__ = 'https://github.com/chrishuck/LastSTEP/main/LastSTEP.FCMacro'
__Wiki__ = ''
__Icon__ = ''
__Xpm__ = ''
__Help__ = 'Select the bodies you want to export as individual STEP files'
__Status__ = 'Stable'
__Requires__ = 'FreeCAD'
__Communication__ = 'https://github.com/chrishuck/LastSTEP/issues'
__Files__ = 'LastSTEP.FCMacro'
##

from PySide import QtGui

# Get the selected bodies that have been pre-selected
sel = Gui.Selection.getSelection()

if sel == []:  # Checks for empty selection

    # Displays an error dialog box if the user hasn't pre-selected any points
    error_dialog = QtGui.QMessageBox()
    error_dialog.setWindowTitle("LastSTEP") ## Ignored in MacOS
    error_dialog.setIcon(QtGui.QMessageBox.Warning)
    error_dialog.setText("Selection Error:")
    error_dialog.setInformativeText("You have not selected anything. Please select some bodies and try again.")
    error_button = error_dialog.exec_()

else: # Proceeds with export if bodies are selected

    # Opens a dialog box so the user can select the folder to export all of the STEP files into
    folder = str(QtGui.QFileDialog.getExistingDirectory(None, "Select Directory"))

    import ImportGui

    options = None
    if hasattr(ImportGui, "exportOptions"):
        options = ImportGui.exportOptions(".step")
    
    # Loops through the selected bodies and exports them as a STEP file with a filename that is the same as
    # the Label property of the body
    for i in sel:
        objs = []
        objs.append(i)
        file = folder+"/"+i.Label+".step" 
        ImportGui.export(objs, file, options)
 